(in-package :mu-cl-resources)

(define-resource BesluitType ()
  :class         (s-prefix "skos:Concept")
  :properties    `((:preflabel          :string ,(s-prefix "skos:prefLabel")
                                        :required)
                   (:definition         :string ,(s-prefix "skos:definition")
                                        :required))
  :has-one       `((BesluitType :via ,(s-prefix "skos:broader")
                                :as  "parenttype"))
  :has-many      `((BesluitType :via ,(s-prefix "skos:broader")
                                :inverse t
                                :as  "subtypes")
                   (NotificationRule :via ,(s-prefix "besluit:notificationRule")
                                     :as "notification"))
  :resource-base (s-url "https://data.vlaanderen.be/id/concept/BesluitType/")
  :on-path       "besluittype")

(define-resource BesluitDocumentType ()
  :class         (s-prefix "skos:Concept")
  :properties    `((:preflabel          :string ,(s-prefix "skos:prefLabel")
                                        :required)
                   (:definition         :string ,(s-prefix "skos:definition")
                                        :required))
  :has-many      `((NotificationRule :via ,(s-prefix "besluit:notificationRule")
                                     :as "notification"))
  :resource-base (s-url "https://data.vlaanderen.be/id/concept/BesluitDocumentType/")
  :on-path       "besluitdocumenttype")

(define-resource BestuurseenheidClassificatieCode ()
  :class         (s-prefix "skos:Concept")
  :properties    `((:preflabel :string ,(s-prefix "skos:prefLabel")))
  :resource-base (s-url "http://data.vlaanderen.be/id/concept/BestuurseenheidClassificatieCode/")
  :on-path       "bestuurseenheidclassificatiecode")

(define-resource NotificationRule ()
  :class (s-prefix "rule:NotificationRule")
  :properties `((:obligationtoreport :boolean ,(s-prefix "besluit:obligationToReport")
                                     :required)
                (:validfrom    :datetime ,(s-prefix "sch:validFrom"))
                (:validthrough :datetime ,(s-prefix "sch:validThrough")))
  :has-many   `((BestuurseenheidClassificatieCode :via ,(s-prefix "besluit:decidableBy")
                                                  :as "decidableby"))
  :resource-base (s-prefix "rule:")
  :on-path       "notificationrule")

